/*
 * Twilio - Verify
 *
 * This is the public Twilio REST API.
 *
 * API version: 1.20.0
 * Contact: support@twilio.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"net/url"

	"strings"
)

// Optional parameters for the method 'CreateAccessToken'
type CreateAccessTokenParams struct {
	// The Type of this Factor. Eg. `push`
	FactorType *string `json:"FactorType,omitempty"`
	// The unique external identifier for the Entity of the Service. This identifier should be immutable, not PII, and generated by your external system, such as your user's UUID, GUID, or SID.
	Identity *string `json:"Identity,omitempty"`
}

func (params *CreateAccessTokenParams) SetFactorType(FactorType string) *CreateAccessTokenParams {
	params.FactorType = &FactorType
	return params
}
func (params *CreateAccessTokenParams) SetIdentity(Identity string) *CreateAccessTokenParams {
	params.Identity = &Identity
	return params
}

// Create a new enrollment Access Token for the Entity
func (c *ApiService) CreateAccessToken(ServiceSid string, params *CreateAccessTokenParams) (*VerifyV2AccessToken, error) {
	path := "/v2/Services/{ServiceSid}/AccessTokens"
	path = strings.Replace(path, "{"+"ServiceSid"+"}", ServiceSid, -1)

	data := url.Values{}
	if params != nil && params.FactorType != nil {
		data.Set("FactorType", *params.FactorType)
	}
	if params != nil && params.Identity != nil {
		data.Set("Identity", *params.Identity)
	}
	headers := make(map[string]interface{})

	resp, err := c.requestHandler.Post(c.baseURL+path, data, headers)
	if err != nil {
		return nil, err
	}

	defer resp.Body.Close()

	ps := &VerifyV2AccessToken{}
	if err := json.NewDecoder(resp.Body).Decode(ps); err != nil {
		return nil, err
	}

	return ps, err
}
