/*
 * Twilio - Insights
 *
 * This is the public Twilio REST API.
 *
 * API version: 5.15.0
 * Contact: support@twilio.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"encoding/json"
	"fmt"
	twilio "github.com/twilio/twilio-go/client"
	"net/url"
)

type MetricsTagApiService struct {
	baseURL string
	client  *twilio.Client
}

func NewMetricsTagApiService(client *twilio.Client) *MetricsTagApiService {
	return &MetricsTagApiService {
		client: client,
		baseURL: fmt.Sprintf("https://studio.%s", client.BaseURL),
	}
}
// ListMetricParams Optional parameters for the method 'ListMetric'
type ListMetricParams struct {
	Edge *string `json:"Edge,omitempty"`
	Direction *string `json:"Direction,omitempty"`
	PageSize *int32 `json:"PageSize,omitempty"`
}

/*
ListMetric Method for ListMetric
 * @param callSid
 * @param optional nil or *ListMetricOpts - Optional Parameters:
 * @param "Edge" (string) - 
 * @param "Direction" (string) - 
 * @param "PageSize" (int32) - How many resources to return in each list page. The default is 50, and the maximum is 1000.
@return InsightsV1CallMetricReadResponse
*/
func (c *MetricsTagApiService) ListMetric(callSid string, params *ListMetricParams) (*InsightsV1CallMetricReadResponse, error) {
	path := "/v1/Voice/{CallSid}/Metrics"
	path = strings.Replace(path, "{"+"CallSid"+"}", callSid, -1)

	data := url.Values{}
	headers := 0

	if params != nil && params.Edge != nil {
		data.Set("Edge", *params.Edge)
	}
	if params != nil && params.Direction != nil {
		data.Set("Direction", *params.Direction)
	}
	if params != nil && params.PageSize != nil {
		data.Set("PageSize", string(*params.PageSize))
	}


	resp, err := c.client.Get(c.baseURL+path, data, headers)
	if err != nil {
		return nil, err
	}

	defer resp.Body.Close()

	ps := &InsightsV1CallMetricReadResponse{}
	if err := json.NewDecoder(resp.Body).Decode(ps); err != nil {
		return nil, err
	}

	return ps, err
}
