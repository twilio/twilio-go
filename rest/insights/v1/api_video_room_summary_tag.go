/*
 * Twilio - Insights
 *
 * This is the public Twilio REST API.
 *
 * API version: 5.15.0
 * Contact: support@twilio.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"encoding/json"
	"fmt"
    twilio "github.com/twilio/twilio-go/client"
    "net/url"
    "strings"
    "reflect"
    ""
)

type VideoRoomSummaryTagApiService struct {
    baseURL string
    client  *twilio.Client
}

func NewVideoRoomSummaryTagApiService(client *twilio.Client) *VideoRoomSummaryTagApiService {
    return &VideoRoomSummaryTagApiService{
        client: client,
        baseURL: fmt.Sprintf("https://studio.%s", client.BaseURL),
    }
}

/*
FetchVideoRoomSummary Method for FetchVideoRoomSummary
 * @param roomSid
@return InsightsV1VideoRoomSummary
*/
func (c *VideoRoomSummaryTagApiService) FetchVideoRoomSummary(roomSid string) (*InsightsV1VideoRoomSummary, error) {
    path := "/v1/Video/Rooms/{RoomSid}"
    path = strings.Replace(path, "{"+"RoomSid"+"}", roomSid, -1)

    data := 0
    headers := 0



    resp, err := c.client.Get(c.baseURL+path, data, headers)
    if err != nil {
        return nil, err
    }

    defer resp.Body.Close()

    ps := &InsightsV1VideoRoomSummary{}
    if err := json.NewDecoder(resp.Body).Decode(ps); err != nil {
        return nil, err
    }

    return ps, err
}
// ListVideoRoomSummaryParams Optional parameters for the method 'ListVideoRoomSummary'
type ListVideoRoomSummaryParams struct {
    RoomType *[]string `json:"RoomType,omitempty"`
    Codec *[]string `json:"Codec,omitempty"`
    RoomName *string `json:"RoomName,omitempty"`
    CreatedAfter *time.Time `json:"CreatedAfter,omitempty"`
    CreatedBefore *time.Time `json:"CreatedBefore,omitempty"`
    PageSize *int32 `json:"PageSize,omitempty"`
}

/*
ListVideoRoomSummary Method for ListVideoRoomSummary
 * @param optional nil or *ListVideoRoomSummaryOpts - Optional Parameters:
 * @param "RoomType" ([]string) - 
 * @param "Codec" ([]string) - 
 * @param "RoomName" (string) - 
 * @param "CreatedAfter" (time.Time) - 
 * @param "CreatedBefore" (time.Time) - 
 * @param "PageSize" (int32) - How many resources to return in each list page. The default is 50, and the maximum is 1000.
@return InsightsV1VideoRoomSummaryReadResponse
*/
func (c *VideoRoomSummaryTagApiService) ListVideoRoomSummary(params *ListVideoRoomSummaryParams) (*InsightsV1VideoRoomSummaryReadResponse, error) {
    path := "/v1/Video/Rooms"

    data := url.Values{}
    headers := 0

    if params != nil && params.RoomType != nil {
        data.Set("RoomType", string(*params.RoomType))
    }
    if params != nil && params.Codec != nil {
        data.Set("Codec", string(*params.Codec))
    }
    if params != nil && params.RoomName != nil {
        data.Set("RoomName", *params.RoomName)
    }
    if params != nil && params.CreatedAfter != nil {
        data.Set("CreatedAfter", string(*params.CreatedAfter))
    }
    if params != nil && params.CreatedBefore != nil {
        data.Set("CreatedBefore", string(*params.CreatedBefore))
    }
    if params != nil && params.PageSize != nil {
        data.Set("PageSize", string(*params.PageSize))
    }


    resp, err := c.client.Get(c.baseURL+path, data, headers)
    if err != nil {
        return nil, err
    }

    defer resp.Body.Close()

    ps := &InsightsV1VideoRoomSummaryReadResponse{}
    if err := json.NewDecoder(resp.Body).Decode(ps); err != nil {
        return nil, err
    }

    return ps, err
}
