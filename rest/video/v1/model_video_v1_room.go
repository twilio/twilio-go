/*
 * This code was generated by
 * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
 *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
 *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \
 *
 * Twilio - Video
 * This is the public Twilio REST API.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package openapi

import (
	"time"
)

// VideoV1Room struct for VideoV1Room
type VideoV1Room struct {
	// The unique string that identifies the resource
	Sid    *string `json:"sid,omitempty"`
	Status *string `json:"status,omitempty"`
	// The ISO 8601 date and time in GMT when the resource was created
	DateCreated *time.Time `json:"date_created,omitempty"`
	// The ISO 8601 date and time in GMT when the resource was last updated
	DateUpdated *time.Time `json:"date_updated,omitempty"`
	// The SID of the Account that created the resource
	AccountSid *string `json:"account_sid,omitempty"`
	// Enable Twilio's Network Traversal TURN service
	EnableTurn *bool `json:"enable_turn,omitempty"`
	// An application-defined string that uniquely identifies the resource
	UniqueName *string `json:"unique_name,omitempty"`
	// The URL to send status information to your application
	StatusCallback *string `json:"status_callback,omitempty"`
	// The HTTP method we use to call status_callback
	StatusCallbackMethod *string `json:"status_callback_method,omitempty"`
	// The UTC end time of the room in UTC ISO 8601 format
	EndTime *time.Time `json:"end_time,omitempty"`
	// The duration of the room in seconds
	Duration *int    `json:"duration,omitempty"`
	Type     *string `json:"type,omitempty"`
	// The maximum number of concurrent Participants allowed in the room
	MaxParticipants *int `json:"max_participants,omitempty"`
	// The maximum number of seconds a Participant can be connected to the room
	MaxParticipantDuration *int `json:"max_participant_duration,omitempty"`
	// The maximum number of published tracks allowed in the room at the same time
	MaxConcurrentPublishedTracks *int `json:"max_concurrent_published_tracks,omitempty"`
	// Whether to start recording when Participants connect
	RecordParticipantsOnConnect *bool `json:"record_participants_on_connect,omitempty"`
	// An array of the video codecs that are supported when publishing a track in the room
	VideoCodecs *[]string `json:"video_codecs,omitempty"`
	// The region for the media server in Group Rooms
	MediaRegion *string `json:"media_region,omitempty"`
	// Indicates whether the room will only contain audio track participants for group rooms.
	AudioOnly *bool `json:"audio_only,omitempty"`
	// The time a room will remain active after last participant leaves.
	EmptyRoomTimeout *int `json:"empty_room_timeout,omitempty"`
	// The time a room will remain active when no one joins.
	UnusedRoomTimeout *int `json:"unused_room_timeout,omitempty"`
	// Indicates if this is a large room.
	LargeRoom *bool `json:"large_room,omitempty"`
	// The absolute URL of the resource
	Url *string `json:"url,omitempty"`
	// The URLs of related resources
	Links *map[string]interface{} `json:"links,omitempty"`
}
