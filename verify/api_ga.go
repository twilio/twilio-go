/*
 * Twilio - Verify
 *
 * This is the public Twilio REST API.
 *
 * API version: 1.0.1
 * Contact: support@twilio.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package twilio

import (
	"encoding/json"
	"fmt"
    "github.com/twilio/twilio-go/client"
    "strings"
)

type GAApiService struct {
    baseURL string
    client  *twilio.Client
}

func NewGAApiService(client *twilio.Client) *GAApiService {
    return &GAApiService{
        client: client,
        baseURL: fmt.Sprintf("https://studio.%s", client.BaseURL),
    }
}
// V2ServicesGetParams Optional parameters for the method 'V2ServicesGet'
type V2ServicesGetParams struct {
    PageSize *int32 `json:"PageSize,omitempty"`
}

/*
V2ServicesGet Method for V2ServicesGet
Retrieve a list of all Verification Services for an account.
 * @param optional nil or *V2ServicesGetOpts - Optional Parameters:
 * @param "PageSize" (int32) - How many resources to return in each list page. The default is 50, and the maximum is 1000.
@return InlineResponse200
*/
func (c *GAApiService) V2ServicesGet(params *V2ServicesGetParams) (*InlineResponse200, error) {
    path := "/v2/Services"

    data := make(map[string]interface{})
    headers := 0

    if params.PageSize != nil {
        data["PageSize"] = *params.PageSize
    }


    resp, err := c.client.Get(c.baseURL+path, data, headers)
    if err != nil {
        return nil, err
    }

    defer resp.Body.Close()

    ps := &InlineResponse200{}
    if err := json.NewDecoder(resp.Body).Decode(ps); err != nil {
        return nil, err
    }

    return ps, err
}
// V2ServicesPostParams Optional parameters for the method 'V2ServicesPost'
type V2ServicesPostParams struct {
    CodeLength *int32 `json:"CodeLength,omitempty"`
    CustomCodeEnabled *bool `json:"CustomCodeEnabled,omitempty"`
    DoNotShareWarningEnabled *bool `json:"DoNotShareWarningEnabled,omitempty"`
    DtmfInputRequired *bool `json:"DtmfInputRequired,omitempty"`
    FriendlyName *string `json:"FriendlyName,omitempty"`
    LookupEnabled *bool `json:"LookupEnabled,omitempty"`
    Psd2Enabled *bool `json:"Psd2Enabled,omitempty"`
    Push *map[string]interface{} `json:"Push,omitempty"`
    SkipSmsToLandlines *bool `json:"SkipSmsToLandlines,omitempty"`
    TtsName *string `json:"TtsName,omitempty"`
}

/*
V2ServicesPost Method for V2ServicesPost
Create a new Verification Service.
 * @param optional nil or *V2ServicesPostOpts - Optional Parameters:
 * @param "CodeLength" (int32) - The length of the verification code to generate. Must be an integer value between 4 and 10, inclusive.
 * @param "CustomCodeEnabled" (bool) - Whether to allow sending verifications with a custom code instead of a randomly generated one. Not available for all customers.
 * @param "DoNotShareWarningEnabled" (bool) - Whether to add a security warning at the end of an SMS verification body. Disabled by default and applies only to SMS. Example SMS body: `Your AppName verification code is: 1234. Don’t share this code with anyone; our employees will never ask for the code`
 * @param "DtmfInputRequired" (bool) - Whether to ask the user to press a number before delivering the verify code in a phone call.
 * @param "FriendlyName" (string) - A descriptive string that you create to describe the verification service. It can be up to 64 characters long. **This value should not contain PII.**
 * @param "LookupEnabled" (bool) - Whether to perform a lookup with each verification started and return info about the phone number.
 * @param "Psd2Enabled" (bool) - Whether to pass PSD2 transaction parameters when starting a verification.
 * @param "Push" (map[string]interface{}) - Configurations for the Push factors (channel) created under this Service. If present, it must be a json string with the following format: {\\\"notify_service_sid\\\": \\\"ISXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\\", \\\"include_date\\\": true}. If `include_date` is set to `true`, which is the default, that means that the push challenge’s response will include the date created value. If `include_date` is set to `false`, then the date created value will not be included. See [Challenge](https://www.twilio.com/docs/verify/api/challenge) resource’s details parameter for more info
 * @param "SkipSmsToLandlines" (bool) - Whether to skip sending SMS verifications to landlines. Requires `lookup_enabled`.
 * @param "TtsName" (string) - The name of an alternative text-to-speech service to use in phone calls. Applies only to TTS languages.
@return VerifyV2Service
*/
func (c *GAApiService) V2ServicesPost(params *V2ServicesPostParams) (*VerifyV2Service, error) {
    path := "/v2/Services"

    data := make(map[string]interface{})
    headers := 0

    if params.CodeLength != nil {
        data["CodeLength"] = *params.CodeLength
    }
    if params.CustomCodeEnabled != nil {
        data["CustomCodeEnabled"] = *params.CustomCodeEnabled
    }
    if params.DoNotShareWarningEnabled != nil {
        data["DoNotShareWarningEnabled"] = *params.DoNotShareWarningEnabled
    }
    if params.DtmfInputRequired != nil {
        data["DtmfInputRequired"] = *params.DtmfInputRequired
    }
    if params.FriendlyName != nil {
        data["FriendlyName"] = *params.FriendlyName
    }
    if params.LookupEnabled != nil {
        data["LookupEnabled"] = *params.LookupEnabled
    }
    if params.Psd2Enabled != nil {
        data["Psd2Enabled"] = *params.Psd2Enabled
    }
    if params.Push != nil {
        data["Push"] = *params.Push
    }
    if params.SkipSmsToLandlines != nil {
        data["SkipSmsToLandlines"] = *params.SkipSmsToLandlines
    }
    if params.TtsName != nil {
        data["TtsName"] = *params.TtsName
    }


    resp, err := c.client.Post(c.baseURL+path, data, headers)
    if err != nil {
        return nil, err
    }

    defer resp.Body.Close()

    ps := &VerifyV2Service{}
    if err := json.NewDecoder(resp.Body).Decode(ps); err != nil {
        return nil, err
    }

    return ps, err
}

/*
V2ServicesServiceSidMessagingConfigurationsCountryDelete Method for V2ServicesServiceSidMessagingConfigurationsCountryDelete
Delete a specific MessagingConfiguration.
 * @param serviceSid The SID of the [Service](https://www.twilio.com/docs/verify/api/service) that the resource is associated with.
 * @param country The [ISO-3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code of the country this configuration will be applied to. If this is a global configuration, Country will take the value `all`.
*/
func (c *GAApiService) V2ServicesServiceSidMessagingConfigurationsCountryDelete(serviceSid string, country string) (error) {
    path := "/v2/Services/{ServiceSid}/MessagingConfigurations/{Country}"
    path = strings.Replace(path, "{"+"ServiceSid"+"}", serviceSid, -1)
    path = strings.Replace(path, "{"+"Country"+"}", country, -1)

    data := 0
    headers := 0



    resp, err := c.client.Delete(c.baseURL+path, data, headers)
    if err != nil {
        return err
    }

    defer resp.Body.Close()

    return nil
}

/*
V2ServicesServiceSidMessagingConfigurationsCountryGet Method for V2ServicesServiceSidMessagingConfigurationsCountryGet
Fetch a specific MessagingConfiguration.
 * @param serviceSid The SID of the [Service](https://www.twilio.com/docs/verify/api/service) that the resource is associated with.
 * @param country The [ISO-3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code of the country this configuration will be applied to. If this is a global configuration, Country will take the value `all`.
@return VerifyV2ServiceMessagingConfiguration
*/
func (c *GAApiService) V2ServicesServiceSidMessagingConfigurationsCountryGet(serviceSid string, country string) (*VerifyV2ServiceMessagingConfiguration, error) {
    path := "/v2/Services/{ServiceSid}/MessagingConfigurations/{Country}"
    path = strings.Replace(path, "{"+"ServiceSid"+"}", serviceSid, -1)
    path = strings.Replace(path, "{"+"Country"+"}", country, -1)

    data := 0
    headers := 0



    resp, err := c.client.Get(c.baseURL+path, data, headers)
    if err != nil {
        return nil, err
    }

    defer resp.Body.Close()

    ps := &VerifyV2ServiceMessagingConfiguration{}
    if err := json.NewDecoder(resp.Body).Decode(ps); err != nil {
        return nil, err
    }

    return ps, err
}
// V2ServicesServiceSidMessagingConfigurationsCountryPostParams Optional parameters for the method 'V2ServicesServiceSidMessagingConfigurationsCountryPost'
type V2ServicesServiceSidMessagingConfigurationsCountryPostParams struct {
    MessagingServiceSid *string `json:"MessagingServiceSid,omitempty"`
}

/*
V2ServicesServiceSidMessagingConfigurationsCountryPost Method for V2ServicesServiceSidMessagingConfigurationsCountryPost
Update a specific MessagingConfiguration
 * @param serviceSid The SID of the [Service](https://www.twilio.com/docs/verify/api/service) that the resource is associated with.
 * @param country The [ISO-3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code of the country this configuration will be applied to. If this is a global configuration, Country will take the value `all`.
 * @param optional nil or *V2ServicesServiceSidMessagingConfigurationsCountryPostOpts - Optional Parameters:
 * @param "MessagingServiceSid" (string) - The SID of the [Messaging Service](https://www.twilio.com/docs/sms/services/api) to be used to send SMS to the country of this configuration.
@return VerifyV2ServiceMessagingConfiguration
*/
func (c *GAApiService) V2ServicesServiceSidMessagingConfigurationsCountryPost(serviceSid string, country string, params *V2ServicesServiceSidMessagingConfigurationsCountryPostParams) (*VerifyV2ServiceMessagingConfiguration, error) {
    path := "/v2/Services/{ServiceSid}/MessagingConfigurations/{Country}"
    path = strings.Replace(path, "{"+"ServiceSid"+"}", serviceSid, -1)
    path = strings.Replace(path, "{"+"Country"+"}", country, -1)

    data := make(map[string]interface{})
    headers := 0

    if params.MessagingServiceSid != nil {
        data["MessagingServiceSid"] = *params.MessagingServiceSid
    }


    resp, err := c.client.Post(c.baseURL+path, data, headers)
    if err != nil {
        return nil, err
    }

    defer resp.Body.Close()

    ps := &VerifyV2ServiceMessagingConfiguration{}
    if err := json.NewDecoder(resp.Body).Decode(ps); err != nil {
        return nil, err
    }

    return ps, err
}
// V2ServicesServiceSidMessagingConfigurationsGetParams Optional parameters for the method 'V2ServicesServiceSidMessagingConfigurationsGet'
type V2ServicesServiceSidMessagingConfigurationsGetParams struct {
    PageSize *int32 `json:"PageSize,omitempty"`
}

/*
V2ServicesServiceSidMessagingConfigurationsGet Method for V2ServicesServiceSidMessagingConfigurationsGet
Retrieve a list of all Messaging Configurations for a Service.
 * @param serviceSid The SID of the [Service](https://www.twilio.com/docs/verify/api/service) that the resource is associated with.
 * @param optional nil or *V2ServicesServiceSidMessagingConfigurationsGetOpts - Optional Parameters:
 * @param "PageSize" (int32) - How many resources to return in each list page. The default is 50, and the maximum is 1000.
@return InlineResponse2004
*/
func (c *GAApiService) V2ServicesServiceSidMessagingConfigurationsGet(serviceSid string, params *V2ServicesServiceSidMessagingConfigurationsGetParams) (*InlineResponse2004, error) {
    path := "/v2/Services/{ServiceSid}/MessagingConfigurations"
    path = strings.Replace(path, "{"+"ServiceSid"+"}", serviceSid, -1)

    data := make(map[string]interface{})
    headers := 0

    if params.PageSize != nil {
        data["PageSize"] = *params.PageSize
    }


    resp, err := c.client.Get(c.baseURL+path, data, headers)
    if err != nil {
        return nil, err
    }

    defer resp.Body.Close()

    ps := &InlineResponse2004{}
    if err := json.NewDecoder(resp.Body).Decode(ps); err != nil {
        return nil, err
    }

    return ps, err
}
// V2ServicesServiceSidMessagingConfigurationsPostParams Optional parameters for the method 'V2ServicesServiceSidMessagingConfigurationsPost'
type V2ServicesServiceSidMessagingConfigurationsPostParams struct {
    Country *string `json:"Country,omitempty"`
    MessagingServiceSid *string `json:"MessagingServiceSid,omitempty"`
}

/*
V2ServicesServiceSidMessagingConfigurationsPost Method for V2ServicesServiceSidMessagingConfigurationsPost
Create a new MessagingConfiguration for a service.
 * @param serviceSid The SID of the [Service](https://www.twilio.com/docs/verify/api/service) that the resource is associated with.
 * @param optional nil or *V2ServicesServiceSidMessagingConfigurationsPostOpts - Optional Parameters:
 * @param "Country" (string) - The [ISO-3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code of the country this configuration will be applied to. If this is a global configuration, Country will take the value `all`.
 * @param "MessagingServiceSid" (string) - The SID of the [Messaging Service](https://www.twilio.com/docs/sms/services/api) to be used to send SMS to the country of this configuration.
@return VerifyV2ServiceMessagingConfiguration
*/
func (c *GAApiService) V2ServicesServiceSidMessagingConfigurationsPost(serviceSid string, params *V2ServicesServiceSidMessagingConfigurationsPostParams) (*VerifyV2ServiceMessagingConfiguration, error) {
    path := "/v2/Services/{ServiceSid}/MessagingConfigurations"
    path = strings.Replace(path, "{"+"ServiceSid"+"}", serviceSid, -1)

    data := make(map[string]interface{})
    headers := 0

    if params.Country != nil {
        data["Country"] = *params.Country
    }
    if params.MessagingServiceSid != nil {
        data["MessagingServiceSid"] = *params.MessagingServiceSid
    }


    resp, err := c.client.Post(c.baseURL+path, data, headers)
    if err != nil {
        return nil, err
    }

    defer resp.Body.Close()

    ps := &VerifyV2ServiceMessagingConfiguration{}
    if err := json.NewDecoder(resp.Body).Decode(ps); err != nil {
        return nil, err
    }

    return ps, err
}
// V2ServicesServiceSidRateLimitsGetParams Optional parameters for the method 'V2ServicesServiceSidRateLimitsGet'
type V2ServicesServiceSidRateLimitsGetParams struct {
    PageSize *int32 `json:"PageSize,omitempty"`
}

/*
V2ServicesServiceSidRateLimitsGet Method for V2ServicesServiceSidRateLimitsGet
Retrieve a list of all Rate Limits for a service.
 * @param serviceSid The SID of the [Service](https://www.twilio.com/docs/verify/api/service) the resource is associated with.
 * @param optional nil or *V2ServicesServiceSidRateLimitsGetOpts - Optional Parameters:
 * @param "PageSize" (int32) - How many resources to return in each list page. The default is 50, and the maximum is 1000.
@return InlineResponse2005
*/
func (c *GAApiService) V2ServicesServiceSidRateLimitsGet(serviceSid string, params *V2ServicesServiceSidRateLimitsGetParams) (*InlineResponse2005, error) {
    path := "/v2/Services/{ServiceSid}/RateLimits"
    path = strings.Replace(path, "{"+"ServiceSid"+"}", serviceSid, -1)

    data := make(map[string]interface{})
    headers := 0

    if params.PageSize != nil {
        data["PageSize"] = *params.PageSize
    }


    resp, err := c.client.Get(c.baseURL+path, data, headers)
    if err != nil {
        return nil, err
    }

    defer resp.Body.Close()

    ps := &InlineResponse2005{}
    if err := json.NewDecoder(resp.Body).Decode(ps); err != nil {
        return nil, err
    }

    return ps, err
}
// V2ServicesServiceSidRateLimitsPostParams Optional parameters for the method 'V2ServicesServiceSidRateLimitsPost'
type V2ServicesServiceSidRateLimitsPostParams struct {
    Description *string `json:"Description,omitempty"`
    UniqueName *string `json:"UniqueName,omitempty"`
}

/*
V2ServicesServiceSidRateLimitsPost Method for V2ServicesServiceSidRateLimitsPost
Create a new Rate Limit for a Service
 * @param serviceSid The SID of the [Service](https://www.twilio.com/docs/verify/api/service) the resource is associated with.
 * @param optional nil or *V2ServicesServiceSidRateLimitsPostOpts - Optional Parameters:
 * @param "Description" (string) - Description of this Rate Limit
 * @param "UniqueName" (string) - Provides a unique and addressable name to be assigned to this Rate Limit, assigned by the developer, to be optionally used in addition to SID. **This value should not contain PII.**
@return VerifyV2ServiceRateLimit
*/
func (c *GAApiService) V2ServicesServiceSidRateLimitsPost(serviceSid string, params *V2ServicesServiceSidRateLimitsPostParams) (*VerifyV2ServiceRateLimit, error) {
    path := "/v2/Services/{ServiceSid}/RateLimits"
    path = strings.Replace(path, "{"+"ServiceSid"+"}", serviceSid, -1)

    data := make(map[string]interface{})
    headers := 0

    if params.Description != nil {
        data["Description"] = *params.Description
    }
    if params.UniqueName != nil {
        data["UniqueName"] = *params.UniqueName
    }


    resp, err := c.client.Post(c.baseURL+path, data, headers)
    if err != nil {
        return nil, err
    }

    defer resp.Body.Close()

    ps := &VerifyV2ServiceRateLimit{}
    if err := json.NewDecoder(resp.Body).Decode(ps); err != nil {
        return nil, err
    }

    return ps, err
}
// V2ServicesServiceSidRateLimitsRateLimitSidBucketsGetParams Optional parameters for the method 'V2ServicesServiceSidRateLimitsRateLimitSidBucketsGet'
type V2ServicesServiceSidRateLimitsRateLimitSidBucketsGetParams struct {
    PageSize *int32 `json:"PageSize,omitempty"`
}

/*
V2ServicesServiceSidRateLimitsRateLimitSidBucketsGet Method for V2ServicesServiceSidRateLimitsRateLimitSidBucketsGet
Retrieve a list of all Buckets for a Rate Limit.
 * @param serviceSid The SID of the [Service](https://www.twilio.com/docs/verify/api/service) the resource is associated with.
 * @param rateLimitSid The Twilio-provided string that uniquely identifies the Rate Limit resource.
 * @param optional nil or *V2ServicesServiceSidRateLimitsRateLimitSidBucketsGetOpts - Optional Parameters:
 * @param "PageSize" (int32) - How many resources to return in each list page. The default is 50, and the maximum is 1000.
@return InlineResponse2006
*/
func (c *GAApiService) V2ServicesServiceSidRateLimitsRateLimitSidBucketsGet(serviceSid string, rateLimitSid string, params *V2ServicesServiceSidRateLimitsRateLimitSidBucketsGetParams) (*InlineResponse2006, error) {
    path := "/v2/Services/{ServiceSid}/RateLimits/{RateLimitSid}/Buckets"
    path = strings.Replace(path, "{"+"ServiceSid"+"}", serviceSid, -1)
    path = strings.Replace(path, "{"+"RateLimitSid"+"}", rateLimitSid, -1)

    data := make(map[string]interface{})
    headers := 0

    if params.PageSize != nil {
        data["PageSize"] = *params.PageSize
    }


    resp, err := c.client.Get(c.baseURL+path, data, headers)
    if err != nil {
        return nil, err
    }

    defer resp.Body.Close()

    ps := &InlineResponse2006{}
    if err := json.NewDecoder(resp.Body).Decode(ps); err != nil {
        return nil, err
    }

    return ps, err
}
// V2ServicesServiceSidRateLimitsRateLimitSidBucketsPostParams Optional parameters for the method 'V2ServicesServiceSidRateLimitsRateLimitSidBucketsPost'
type V2ServicesServiceSidRateLimitsRateLimitSidBucketsPostParams struct {
    Interval *int32 `json:"Interval,omitempty"`
    Max *int32 `json:"Max,omitempty"`
}

/*
V2ServicesServiceSidRateLimitsRateLimitSidBucketsPost Method for V2ServicesServiceSidRateLimitsRateLimitSidBucketsPost
Create a new Bucket for a Rate Limit
 * @param serviceSid The SID of the [Service](https://www.twilio.com/docs/verify/api/service) the resource is associated with.
 * @param rateLimitSid The Twilio-provided string that uniquely identifies the Rate Limit resource.
 * @param optional nil or *V2ServicesServiceSidRateLimitsRateLimitSidBucketsPostOpts - Optional Parameters:
 * @param "Interval" (int32) - Number of seconds that the rate limit will be enforced over.
 * @param "Max" (int32) - Maximum number of requests permitted in during the interval.
@return VerifyV2ServiceRateLimitBucket
*/
func (c *GAApiService) V2ServicesServiceSidRateLimitsRateLimitSidBucketsPost(serviceSid string, rateLimitSid string, params *V2ServicesServiceSidRateLimitsRateLimitSidBucketsPostParams) (*VerifyV2ServiceRateLimitBucket, error) {
    path := "/v2/Services/{ServiceSid}/RateLimits/{RateLimitSid}/Buckets"
    path = strings.Replace(path, "{"+"ServiceSid"+"}", serviceSid, -1)
    path = strings.Replace(path, "{"+"RateLimitSid"+"}", rateLimitSid, -1)

    data := make(map[string]interface{})
    headers := 0

    if params.Interval != nil {
        data["Interval"] = *params.Interval
    }
    if params.Max != nil {
        data["Max"] = *params.Max
    }


    resp, err := c.client.Post(c.baseURL+path, data, headers)
    if err != nil {
        return nil, err
    }

    defer resp.Body.Close()

    ps := &VerifyV2ServiceRateLimitBucket{}
    if err := json.NewDecoder(resp.Body).Decode(ps); err != nil {
        return nil, err
    }

    return ps, err
}

/*
V2ServicesServiceSidRateLimitsRateLimitSidBucketsSidDelete Method for V2ServicesServiceSidRateLimitsRateLimitSidBucketsSidDelete
Delete a specific Bucket.
 * @param serviceSid The SID of the [Service](https://www.twilio.com/docs/verify/api/service) the resource is associated with.
 * @param rateLimitSid The Twilio-provided string that uniquely identifies the Rate Limit resource.
 * @param sid A 34 character string that uniquely identifies this Bucket.
*/
func (c *GAApiService) V2ServicesServiceSidRateLimitsRateLimitSidBucketsSidDelete(serviceSid string, rateLimitSid string, sid string) (error) {
    path := "/v2/Services/{ServiceSid}/RateLimits/{RateLimitSid}/Buckets/{Sid}"
    path = strings.Replace(path, "{"+"ServiceSid"+"}", serviceSid, -1)
    path = strings.Replace(path, "{"+"RateLimitSid"+"}", rateLimitSid, -1)
    path = strings.Replace(path, "{"+"Sid"+"}", sid, -1)

    data := 0
    headers := 0



    resp, err := c.client.Delete(c.baseURL+path, data, headers)
    if err != nil {
        return err
    }

    defer resp.Body.Close()

    return nil
}

/*
V2ServicesServiceSidRateLimitsRateLimitSidBucketsSidGet Method for V2ServicesServiceSidRateLimitsRateLimitSidBucketsSidGet
Fetch a specific Bucket.
 * @param serviceSid The SID of the [Service](https://www.twilio.com/docs/verify/api/service) the resource is associated with.
 * @param rateLimitSid The Twilio-provided string that uniquely identifies the Rate Limit resource.
 * @param sid A 34 character string that uniquely identifies this Bucket.
@return VerifyV2ServiceRateLimitBucket
*/
func (c *GAApiService) V2ServicesServiceSidRateLimitsRateLimitSidBucketsSidGet(serviceSid string, rateLimitSid string, sid string) (*VerifyV2ServiceRateLimitBucket, error) {
    path := "/v2/Services/{ServiceSid}/RateLimits/{RateLimitSid}/Buckets/{Sid}"
    path = strings.Replace(path, "{"+"ServiceSid"+"}", serviceSid, -1)
    path = strings.Replace(path, "{"+"RateLimitSid"+"}", rateLimitSid, -1)
    path = strings.Replace(path, "{"+"Sid"+"}", sid, -1)

    data := 0
    headers := 0



    resp, err := c.client.Get(c.baseURL+path, data, headers)
    if err != nil {
        return nil, err
    }

    defer resp.Body.Close()

    ps := &VerifyV2ServiceRateLimitBucket{}
    if err := json.NewDecoder(resp.Body).Decode(ps); err != nil {
        return nil, err
    }

    return ps, err
}
// V2ServicesServiceSidRateLimitsRateLimitSidBucketsSidPostParams Optional parameters for the method 'V2ServicesServiceSidRateLimitsRateLimitSidBucketsSidPost'
type V2ServicesServiceSidRateLimitsRateLimitSidBucketsSidPostParams struct {
    Interval *int32 `json:"Interval,omitempty"`
    Max *int32 `json:"Max,omitempty"`
}

/*
V2ServicesServiceSidRateLimitsRateLimitSidBucketsSidPost Method for V2ServicesServiceSidRateLimitsRateLimitSidBucketsSidPost
Update a specific Bucket.
 * @param serviceSid The SID of the [Service](https://www.twilio.com/docs/verify/api/service) the resource is associated with.
 * @param rateLimitSid The Twilio-provided string that uniquely identifies the Rate Limit resource.
 * @param sid A 34 character string that uniquely identifies this Bucket.
 * @param optional nil or *V2ServicesServiceSidRateLimitsRateLimitSidBucketsSidPostOpts - Optional Parameters:
 * @param "Interval" (int32) - Number of seconds that the rate limit will be enforced over.
 * @param "Max" (int32) - Maximum number of requests permitted in during the interval.
@return VerifyV2ServiceRateLimitBucket
*/
func (c *GAApiService) V2ServicesServiceSidRateLimitsRateLimitSidBucketsSidPost(serviceSid string, rateLimitSid string, sid string, params *V2ServicesServiceSidRateLimitsRateLimitSidBucketsSidPostParams) (*VerifyV2ServiceRateLimitBucket, error) {
    path := "/v2/Services/{ServiceSid}/RateLimits/{RateLimitSid}/Buckets/{Sid}"
    path = strings.Replace(path, "{"+"ServiceSid"+"}", serviceSid, -1)
    path = strings.Replace(path, "{"+"RateLimitSid"+"}", rateLimitSid, -1)
    path = strings.Replace(path, "{"+"Sid"+"}", sid, -1)

    data := make(map[string]interface{})
    headers := 0

    if params.Interval != nil {
        data["Interval"] = *params.Interval
    }
    if params.Max != nil {
        data["Max"] = *params.Max
    }


    resp, err := c.client.Post(c.baseURL+path, data, headers)
    if err != nil {
        return nil, err
    }

    defer resp.Body.Close()

    ps := &VerifyV2ServiceRateLimitBucket{}
    if err := json.NewDecoder(resp.Body).Decode(ps); err != nil {
        return nil, err
    }

    return ps, err
}

/*
V2ServicesServiceSidRateLimitsSidDelete Method for V2ServicesServiceSidRateLimitsSidDelete
Delete a specific Rate Limit.
 * @param serviceSid The SID of the [Service](https://www.twilio.com/docs/verify/api/service) the resource is associated with.
 * @param sid The Twilio-provided string that uniquely identifies the Rate Limit resource to fetch.
*/
func (c *GAApiService) V2ServicesServiceSidRateLimitsSidDelete(serviceSid string, sid string) (error) {
    path := "/v2/Services/{ServiceSid}/RateLimits/{Sid}"
    path = strings.Replace(path, "{"+"ServiceSid"+"}", serviceSid, -1)
    path = strings.Replace(path, "{"+"Sid"+"}", sid, -1)

    data := 0
    headers := 0



    resp, err := c.client.Delete(c.baseURL+path, data, headers)
    if err != nil {
        return err
    }

    defer resp.Body.Close()

    return nil
}

/*
V2ServicesServiceSidRateLimitsSidGet Method for V2ServicesServiceSidRateLimitsSidGet
Fetch a specific Rate Limit.
 * @param serviceSid The SID of the [Service](https://www.twilio.com/docs/verify/api/service) the resource is associated with.
 * @param sid The Twilio-provided string that uniquely identifies the Rate Limit resource to fetch.
@return VerifyV2ServiceRateLimit
*/
func (c *GAApiService) V2ServicesServiceSidRateLimitsSidGet(serviceSid string, sid string) (*VerifyV2ServiceRateLimit, error) {
    path := "/v2/Services/{ServiceSid}/RateLimits/{Sid}"
    path = strings.Replace(path, "{"+"ServiceSid"+"}", serviceSid, -1)
    path = strings.Replace(path, "{"+"Sid"+"}", sid, -1)

    data := 0
    headers := 0



    resp, err := c.client.Get(c.baseURL+path, data, headers)
    if err != nil {
        return nil, err
    }

    defer resp.Body.Close()

    ps := &VerifyV2ServiceRateLimit{}
    if err := json.NewDecoder(resp.Body).Decode(ps); err != nil {
        return nil, err
    }

    return ps, err
}
// V2ServicesServiceSidRateLimitsSidPostParams Optional parameters for the method 'V2ServicesServiceSidRateLimitsSidPost'
type V2ServicesServiceSidRateLimitsSidPostParams struct {
    Description *string `json:"Description,omitempty"`
}

/*
V2ServicesServiceSidRateLimitsSidPost Method for V2ServicesServiceSidRateLimitsSidPost
Update a specific Rate Limit.
 * @param serviceSid The SID of the [Service](https://www.twilio.com/docs/verify/api/service) the resource is associated with.
 * @param sid The Twilio-provided string that uniquely identifies the Rate Limit resource to fetch.
 * @param optional nil or *V2ServicesServiceSidRateLimitsSidPostOpts - Optional Parameters:
 * @param "Description" (string) - Description of this Rate Limit
@return VerifyV2ServiceRateLimit
*/
func (c *GAApiService) V2ServicesServiceSidRateLimitsSidPost(serviceSid string, sid string, params *V2ServicesServiceSidRateLimitsSidPostParams) (*VerifyV2ServiceRateLimit, error) {
    path := "/v2/Services/{ServiceSid}/RateLimits/{Sid}"
    path = strings.Replace(path, "{"+"ServiceSid"+"}", serviceSid, -1)
    path = strings.Replace(path, "{"+"Sid"+"}", sid, -1)

    data := make(map[string]interface{})
    headers := 0

    if params.Description != nil {
        data["Description"] = *params.Description
    }


    resp, err := c.client.Post(c.baseURL+path, data, headers)
    if err != nil {
        return nil, err
    }

    defer resp.Body.Close()

    ps := &VerifyV2ServiceRateLimit{}
    if err := json.NewDecoder(resp.Body).Decode(ps); err != nil {
        return nil, err
    }

    return ps, err
}
// V2ServicesServiceSidVerificationCheckPostParams Optional parameters for the method 'V2ServicesServiceSidVerificationCheckPost'
type V2ServicesServiceSidVerificationCheckPostParams struct {
    Amount *string `json:"Amount,omitempty"`
    Code *string `json:"Code,omitempty"`
    Payee *string `json:"Payee,omitempty"`
    To *string `json:"To,omitempty"`
    VerificationSid *string `json:"VerificationSid,omitempty"`
}

/*
V2ServicesServiceSidVerificationCheckPost Method for V2ServicesServiceSidVerificationCheckPost
challenge a specific Verification Check.
 * @param serviceSid The SID of the verification [Service](https://www.twilio.com/docs/verify/api/service) to create the resource under.
 * @param optional nil or *V2ServicesServiceSidVerificationCheckPostOpts - Optional Parameters:
 * @param "Amount" (string) - The amount of the associated PSD2 compliant transaction. Requires the PSD2 Service flag enabled.
 * @param "Code" (string) - The 4-10 character string being verified.
 * @param "Payee" (string) - The payee of the associated PSD2 compliant transaction. Requires the PSD2 Service flag enabled.
 * @param "To" (string) - The phone number or [email](https://www.twilio.com/docs/verify/email) to verify. Either this parameter or the `verification_sid` must be specified. Phone numbers must be in [E.164 format](https://www.twilio.com/docs/glossary/what-e164).
 * @param "VerificationSid" (string) - A SID that uniquely identifies the Verification Check. Either this parameter or the `to` phone number/[email](https://www.twilio.com/docs/verify/email) must be specified.
@return VerifyV2ServiceVerificationCheck
*/
func (c *GAApiService) V2ServicesServiceSidVerificationCheckPost(serviceSid string, params *V2ServicesServiceSidVerificationCheckPostParams) (*VerifyV2ServiceVerificationCheck, error) {
    path := "/v2/Services/{ServiceSid}/VerificationCheck"
    path = strings.Replace(path, "{"+"ServiceSid"+"}", serviceSid, -1)

    data := make(map[string]interface{})
    headers := 0

    if params.Amount != nil {
        data["Amount"] = *params.Amount
    }
    if params.Code != nil {
        data["Code"] = *params.Code
    }
    if params.Payee != nil {
        data["Payee"] = *params.Payee
    }
    if params.To != nil {
        data["To"] = *params.To
    }
    if params.VerificationSid != nil {
        data["VerificationSid"] = *params.VerificationSid
    }


    resp, err := c.client.Post(c.baseURL+path, data, headers)
    if err != nil {
        return nil, err
    }

    defer resp.Body.Close()

    ps := &VerifyV2ServiceVerificationCheck{}
    if err := json.NewDecoder(resp.Body).Decode(ps); err != nil {
        return nil, err
    }

    return ps, err
}
// V2ServicesServiceSidVerificationsPostParams Optional parameters for the method 'V2ServicesServiceSidVerificationsPost'
type V2ServicesServiceSidVerificationsPostParams struct {
    Amount *string `json:"Amount,omitempty"`
    AppHash *string `json:"AppHash,omitempty"`
    Channel *string `json:"Channel,omitempty"`
    ChannelConfiguration *map[string]interface{} `json:"ChannelConfiguration,omitempty"`
    CustomCode *string `json:"CustomCode,omitempty"`
    CustomFriendlyName *string `json:"CustomFriendlyName,omitempty"`
    CustomMessage *string `json:"CustomMessage,omitempty"`
    Locale *string `json:"Locale,omitempty"`
    Payee *string `json:"Payee,omitempty"`
    RateLimits *map[string]interface{} `json:"RateLimits,omitempty"`
    SendDigits *string `json:"SendDigits,omitempty"`
    To *string `json:"To,omitempty"`
}

/*
V2ServicesServiceSidVerificationsPost Method for V2ServicesServiceSidVerificationsPost
Create a new Verification using a Service
 * @param serviceSid The SID of the verification [Service](https://www.twilio.com/docs/verify/api/service) to create the resource under.
 * @param optional nil or *V2ServicesServiceSidVerificationsPostOpts - Optional Parameters:
 * @param "Amount" (string) - The amount of the associated PSD2 compliant transaction. Requires the PSD2 Service flag enabled.
 * @param "AppHash" (string) - Your [App Hash](https://developers.google.com/identity/sms-retriever/verify#computing_your_apps_hash_string) to be appended at the end of your verification SMS body. Applies only to SMS. Example SMS body: `<#> Your AppName verification code is: 1234 He42w354ol9`.
 * @param "Channel" (string) - The verification method to use. Can be: [`email`](https://www.twilio.com/docs/verify/email), `sms` or `call`.
 * @param "ChannelConfiguration" (map[string]interface{}) - [`email`](https://www.twilio.com/docs/verify/email) channel configuration in json format. Must include 'from' and 'from_name'.
 * @param "CustomCode" (string) - A pre-generated code to use for verification. The code can be between 4 and 10 characters, inclusive.
 * @param "CustomFriendlyName" (string) - A custom user defined friendly name that overwrites the existing one in the verification message
 * @param "CustomMessage" (string) - The text of a custom message to use for the verification.
 * @param "Locale" (string) - The locale to use for the verification SMS or call. Can be: `af`, `ar`, `ca`, `cs`, `da`, `de`, `el`, `en`, `en-GB`, `es`, `fi`, `fr`, `he`, `hi`, `hr`, `hu`, `id`, `it`, `ja`, `ko`, `ms`, `nb`, `nl`, `pl`, `pt`, `pr-BR`, `ro`, `ru`, `sv`, `th`, `tl`, `tr`, `vi`, `zh`, `zh-CN`, or `zh-HK.`
 * @param "Payee" (string) - The payee of the associated PSD2 compliant transaction. Requires the PSD2 Service flag enabled.
 * @param "RateLimits" (map[string]interface{}) - The custom key-value pairs of Programmable Rate Limits. Keys correspond to `unique_name` fields defined when [creating your Rate Limit](https://www.twilio.com/docs/verify/api/service-rate-limits). Associated value pairs represent values in the request that you are rate limiting on. You may include multiple Rate Limit values in each request.
 * @param "SendDigits" (string) - The digits to send after a phone call is answered, for example, to dial an extension. For more information, see the Programmable Voice documentation of [sendDigits](https://www.twilio.com/docs/voice/twiml/number#attributes-sendDigits).
 * @param "To" (string) - The phone number or [email](https://www.twilio.com/docs/verify/email) to verify. Phone numbers must be in [E.164 format](https://www.twilio.com/docs/glossary/what-e164).
@return VerifyV2ServiceVerification
*/
func (c *GAApiService) V2ServicesServiceSidVerificationsPost(serviceSid string, params *V2ServicesServiceSidVerificationsPostParams) (*VerifyV2ServiceVerification, error) {
    path := "/v2/Services/{ServiceSid}/Verifications"
    path = strings.Replace(path, "{"+"ServiceSid"+"}", serviceSid, -1)

    data := make(map[string]interface{})
    headers := 0

    if params.Amount != nil {
        data["Amount"] = *params.Amount
    }
    if params.AppHash != nil {
        data["AppHash"] = *params.AppHash
    }
    if params.Channel != nil {
        data["Channel"] = *params.Channel
    }
    if params.ChannelConfiguration != nil {
        data["ChannelConfiguration"] = *params.ChannelConfiguration
    }
    if params.CustomCode != nil {
        data["CustomCode"] = *params.CustomCode
    }
    if params.CustomFriendlyName != nil {
        data["CustomFriendlyName"] = *params.CustomFriendlyName
    }
    if params.CustomMessage != nil {
        data["CustomMessage"] = *params.CustomMessage
    }
    if params.Locale != nil {
        data["Locale"] = *params.Locale
    }
    if params.Payee != nil {
        data["Payee"] = *params.Payee
    }
    if params.RateLimits != nil {
        data["RateLimits"] = *params.RateLimits
    }
    if params.SendDigits != nil {
        data["SendDigits"] = *params.SendDigits
    }
    if params.To != nil {
        data["To"] = *params.To
    }


    resp, err := c.client.Post(c.baseURL+path, data, headers)
    if err != nil {
        return nil, err
    }

    defer resp.Body.Close()

    ps := &VerifyV2ServiceVerification{}
    if err := json.NewDecoder(resp.Body).Decode(ps); err != nil {
        return nil, err
    }

    return ps, err
}

/*
V2ServicesServiceSidVerificationsSidGet Method for V2ServicesServiceSidVerificationsSidGet
Fetch a specific Verification
 * @param serviceSid The SID of the verification [Service](https://www.twilio.com/docs/verify/api/service) to fetch the resource from.
 * @param sid The Twilio-provided string that uniquely identifies the Verification resource to fetch.
@return VerifyV2ServiceVerification
*/
func (c *GAApiService) V2ServicesServiceSidVerificationsSidGet(serviceSid string, sid string) (*VerifyV2ServiceVerification, error) {
    path := "/v2/Services/{ServiceSid}/Verifications/{Sid}"
    path = strings.Replace(path, "{"+"ServiceSid"+"}", serviceSid, -1)
    path = strings.Replace(path, "{"+"Sid"+"}", sid, -1)

    data := 0
    headers := 0



    resp, err := c.client.Get(c.baseURL+path, data, headers)
    if err != nil {
        return nil, err
    }

    defer resp.Body.Close()

    ps := &VerifyV2ServiceVerification{}
    if err := json.NewDecoder(resp.Body).Decode(ps); err != nil {
        return nil, err
    }

    return ps, err
}
// V2ServicesServiceSidVerificationsSidPostParams Optional parameters for the method 'V2ServicesServiceSidVerificationsSidPost'
type V2ServicesServiceSidVerificationsSidPostParams struct {
    Status *string `json:"Status,omitempty"`
}

/*
V2ServicesServiceSidVerificationsSidPost Method for V2ServicesServiceSidVerificationsSidPost
Update a Verification status
 * @param serviceSid The SID of the verification [Service](https://www.twilio.com/docs/verify/api/service) to update the resource from.
 * @param sid The Twilio-provided string that uniquely identifies the Verification resource to update.
 * @param optional nil or *V2ServicesServiceSidVerificationsSidPostOpts - Optional Parameters:
 * @param "Status" (string) - The new status of the resource. Can be: `canceled` or `approved`.
@return VerifyV2ServiceVerification
*/
func (c *GAApiService) V2ServicesServiceSidVerificationsSidPost(serviceSid string, sid string, params *V2ServicesServiceSidVerificationsSidPostParams) (*VerifyV2ServiceVerification, error) {
    path := "/v2/Services/{ServiceSid}/Verifications/{Sid}"
    path = strings.Replace(path, "{"+"ServiceSid"+"}", serviceSid, -1)
    path = strings.Replace(path, "{"+"Sid"+"}", sid, -1)

    data := make(map[string]interface{})
    headers := 0

    if params.Status != nil {
        data["Status"] = *params.Status
    }


    resp, err := c.client.Post(c.baseURL+path, data, headers)
    if err != nil {
        return nil, err
    }

    defer resp.Body.Close()

    ps := &VerifyV2ServiceVerification{}
    if err := json.NewDecoder(resp.Body).Decode(ps); err != nil {
        return nil, err
    }

    return ps, err
}

/*
V2ServicesSidDelete Method for V2ServicesSidDelete
Delete a specific Verification Service Instance.
 * @param sid The Twilio-provided string that uniquely identifies the Verification Service resource to delete.
*/
func (c *GAApiService) V2ServicesSidDelete(sid string) (error) {
    path := "/v2/Services/{Sid}"
    path = strings.Replace(path, "{"+"Sid"+"}", sid, -1)

    data := 0
    headers := 0



    resp, err := c.client.Delete(c.baseURL+path, data, headers)
    if err != nil {
        return err
    }

    defer resp.Body.Close()

    return nil
}

/*
V2ServicesSidGet Method for V2ServicesSidGet
Fetch specific Verification Service Instance.
 * @param sid The Twilio-provided string that uniquely identifies the Verification Service resource to fetch.
@return VerifyV2Service
*/
func (c *GAApiService) V2ServicesSidGet(sid string) (*VerifyV2Service, error) {
    path := "/v2/Services/{Sid}"
    path = strings.Replace(path, "{"+"Sid"+"}", sid, -1)

    data := 0
    headers := 0



    resp, err := c.client.Get(c.baseURL+path, data, headers)
    if err != nil {
        return nil, err
    }

    defer resp.Body.Close()

    ps := &VerifyV2Service{}
    if err := json.NewDecoder(resp.Body).Decode(ps); err != nil {
        return nil, err
    }

    return ps, err
}
// V2ServicesSidPostParams Optional parameters for the method 'V2ServicesSidPost'
type V2ServicesSidPostParams struct {
    CodeLength *int32 `json:"CodeLength,omitempty"`
    CustomCodeEnabled *bool `json:"CustomCodeEnabled,omitempty"`
    DoNotShareWarningEnabled *bool `json:"DoNotShareWarningEnabled,omitempty"`
    DtmfInputRequired *bool `json:"DtmfInputRequired,omitempty"`
    FriendlyName *string `json:"FriendlyName,omitempty"`
    LookupEnabled *bool `json:"LookupEnabled,omitempty"`
    Psd2Enabled *bool `json:"Psd2Enabled,omitempty"`
    Push *map[string]interface{} `json:"Push,omitempty"`
    SkipSmsToLandlines *bool `json:"SkipSmsToLandlines,omitempty"`
    TtsName *string `json:"TtsName,omitempty"`
}

/*
V2ServicesSidPost Method for V2ServicesSidPost
Update a specific Verification Service.
 * @param sid The Twilio-provided string that uniquely identifies the Service resource to update.
 * @param optional nil or *V2ServicesSidPostOpts - Optional Parameters:
 * @param "CodeLength" (int32) - The length of the verification code to generate. Must be an integer value between 4 and 10, inclusive.
 * @param "CustomCodeEnabled" (bool) - Whether to allow sending verifications with a custom code instead of a randomly generated one. Not available for all customers.
 * @param "DoNotShareWarningEnabled" (bool) - Whether to add a privacy warning at the end of an SMS. **Disabled by default and applies only for SMS.**
 * @param "DtmfInputRequired" (bool) - Whether to ask the user to press a number before delivering the verify code in a phone call.
 * @param "FriendlyName" (string) - A descriptive string that you create to describe the verification service. It can be up to 64 characters long. **This value should not contain PII.**
 * @param "LookupEnabled" (bool) - Whether to perform a lookup with each verification started and return info about the phone number.
 * @param "Psd2Enabled" (bool) - Whether to pass PSD2 transaction parameters when starting a verification.
 * @param "Push" (map[string]interface{}) - Configurations for the Push factors (channel) created under this Service. If present, it must be a json string with the following format: {\\\"notify_service_sid\\\": \\\"ISXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\\", \\\"include_date\\\": true}. If `include_date` is set to `true`, which is the default, that means that the push challenge’s response will include the date created value. If `include_date` is set to `false`, then the date created value will not be included. See [Challenge](https://www.twilio.com/docs/verify/api/challenge) resource’s details parameter for more info
 * @param "SkipSmsToLandlines" (bool) - Whether to skip sending SMS verifications to landlines. Requires `lookup_enabled`.
 * @param "TtsName" (string) - The name of an alternative text-to-speech service to use in phone calls. Applies only to TTS languages.
@return VerifyV2Service
*/
func (c *GAApiService) V2ServicesSidPost(sid string, params *V2ServicesSidPostParams) (*VerifyV2Service, error) {
    path := "/v2/Services/{Sid}"
    path = strings.Replace(path, "{"+"Sid"+"}", sid, -1)

    data := make(map[string]interface{})
    headers := 0

    if params.CodeLength != nil {
        data["CodeLength"] = *params.CodeLength
    }
    if params.CustomCodeEnabled != nil {
        data["CustomCodeEnabled"] = *params.CustomCodeEnabled
    }
    if params.DoNotShareWarningEnabled != nil {
        data["DoNotShareWarningEnabled"] = *params.DoNotShareWarningEnabled
    }
    if params.DtmfInputRequired != nil {
        data["DtmfInputRequired"] = *params.DtmfInputRequired
    }
    if params.FriendlyName != nil {
        data["FriendlyName"] = *params.FriendlyName
    }
    if params.LookupEnabled != nil {
        data["LookupEnabled"] = *params.LookupEnabled
    }
    if params.Psd2Enabled != nil {
        data["Psd2Enabled"] = *params.Psd2Enabled
    }
    if params.Push != nil {
        data["Push"] = *params.Push
    }
    if params.SkipSmsToLandlines != nil {
        data["SkipSmsToLandlines"] = *params.SkipSmsToLandlines
    }
    if params.TtsName != nil {
        data["TtsName"] = *params.TtsName
    }


    resp, err := c.client.Post(c.baseURL+path, data, headers)
    if err != nil {
        return nil, err
    }

    defer resp.Body.Close()

    ps := &VerifyV2Service{}
    if err := json.NewDecoder(resp.Body).Decode(ps); err != nil {
        return nil, err
    }

    return ps, err
}
