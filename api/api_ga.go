/*
 * Twilio - Api
 *
 * This is the public Twilio REST API.
 *
 * API version: 1.0.0
 * Contact: support@twilio.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package twilio

import (
	"encoding/json"
	"fmt"
    "github.com/twilio/twilio-go/client"
    "strings"
    "time"
)

type GAApiService struct {
    baseURL string
    client  *twilio.Client
}

func NewGAApiService(client *twilio.Client) *GAApiService {
    return &GAApiService{
        client: client,
        baseURL: fmt.Sprintf("https://studio.%s", client.BaseURL),
    }
}
// Call20100401AccountsAccountSidCallsJsonGetParams Optional parameters for the method 'Call20100401AccountsAccountSidCallsJsonGet'
type Call20100401AccountsAccountSidCallsJsonGetParams struct {
    To string `json:"To,omitempty"`
    From string `json:"From,omitempty"`
    ParentCallSid string `json:"ParentCallSid,omitempty"`
    Status string `json:"Status,omitempty"`
    StartTime time.Time `json:"StartTime,omitempty"`
    StartTime2 time.Time `json:"StartTime&lt;,omitempty"`
    StartTime2 time.Time `json:"StartTime&gt;,omitempty"`
    EndTime time.Time `json:"EndTime,omitempty"`
    EndTime2 time.Time `json:"EndTime&lt;,omitempty"`
    EndTime2 time.Time `json:"EndTime&gt;,omitempty"`
    PageSize int32 `json:"PageSize,omitempty"`
}

/*
Call20100401AccountsAccountSidCallsJsonGet Method for Call20100401AccountsAccountSidCallsJsonGet
Retrieves a collection of calls made to and from your account
 * @param accountSid The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Call resource(s) to read.
 * @param optional nil or *Call20100401AccountsAccountSidCallsJsonGetOpts - Optional Parameters:
 * @param "To" (string) - Only show calls made to this phone number, SIP address, Client identifier or SIM SID.
 * @param "From" (string) - Only include calls from this phone number, SIP address, Client identifier or SIM SID.
 * @param "ParentCallSid" (string) - Only include calls spawned by calls with this SID.
 * @param "Status" (string) - The status of the calls to include. Can be: `queued`, `ringing`, `in-progress`, `canceled`, `completed`, `failed`, `busy`, or `no-answer`.
 * @param "StartTime" (time.Time) - Only include calls that started on this date. Specify a date as `YYYY-MM-DD` in GMT, for example: `2009-07-06`, to read only calls that started on this date. You can also specify an inequality, such as `StartTime<=YYYY-MM-DD`, to read calls that started on or before midnight of this date, and `StartTime>=YYYY-MM-DD` to read calls that started on or after midnight of this date.
 * @param "StartTime2" (time.Time) - Only include calls that started on this date. Specify a date as `YYYY-MM-DD` in GMT, for example: `2009-07-06`, to read only calls that started on this date. You can also specify an inequality, such as `StartTime<=YYYY-MM-DD`, to read calls that started on or before midnight of this date, and `StartTime>=YYYY-MM-DD` to read calls that started on or after midnight of this date.
 * @param "StartTime2" (time.Time) - Only include calls that started on this date. Specify a date as `YYYY-MM-DD` in GMT, for example: `2009-07-06`, to read only calls that started on this date. You can also specify an inequality, such as `StartTime<=YYYY-MM-DD`, to read calls that started on or before midnight of this date, and `StartTime>=YYYY-MM-DD` to read calls that started on or after midnight of this date.
 * @param "EndTime" (time.Time) - Only include calls that ended on this date. Specify a date as `YYYY-MM-DD` in GMT, for example: `2009-07-06`, to read only calls that ended on this date. You can also specify an inequality, such as `EndTime<=YYYY-MM-DD`, to read calls that ended on or before midnight of this date, and `EndTime>=YYYY-MM-DD` to read calls that ended on or after midnight of this date.
 * @param "EndTime2" (time.Time) - Only include calls that ended on this date. Specify a date as `YYYY-MM-DD` in GMT, for example: `2009-07-06`, to read only calls that ended on this date. You can also specify an inequality, such as `EndTime<=YYYY-MM-DD`, to read calls that ended on or before midnight of this date, and `EndTime>=YYYY-MM-DD` to read calls that ended on or after midnight of this date.
 * @param "EndTime2" (time.Time) - Only include calls that ended on this date. Specify a date as `YYYY-MM-DD` in GMT, for example: `2009-07-06`, to read only calls that ended on this date. You can also specify an inequality, such as `EndTime<=YYYY-MM-DD`, to read calls that ended on or before midnight of this date, and `EndTime>=YYYY-MM-DD` to read calls that ended on or after midnight of this date.
 * @param "PageSize" (int32) - How many resources to return in each list page. The default is 50, and the maximum is 1000.
@return InlineResponse200
*/
func (c *GAApiService) Call20100401AccountsAccountSidCallsJsonGet(accountSid string, params *Call20100401AccountsAccountSidCallsJsonGetParams) (*InlineResponse200, error) {
    path := "/2010-04-01/Accounts/{AccountSid}/Calls.json"
    path = strings.Replace(path, "{"+"AccountSid"+"}", accountSid, -1)

    resp, err := c.client.Get(c.baseURL+path, params)
    if err != nil {
        return nil, err
    }

    defer resp.Body.Close()

    ps := &InlineResponse200{}
    if err := json.NewDecoder(resp.Body).Decode(ps); err != nil {
        return nil, err
    }

    return ps, err
}
// Call20100401AccountsAccountSidCallsJsonPostParams Optional parameters for the method 'Call20100401AccountsAccountSidCallsJsonPost'
type Call20100401AccountsAccountSidCallsJsonPostParams struct {
    ApplicationSid string `json:"ApplicationSid,omitempty"`
    AsyncAmd string `json:"AsyncAmd,omitempty"`
    AsyncAmdStatusCallback string `json:"AsyncAmdStatusCallback,omitempty"`
    AsyncAmdStatusCallbackMethod string `json:"AsyncAmdStatusCallbackMethod,omitempty"`
    Byoc string `json:"Byoc,omitempty"`
    CallReason string `json:"CallReason,omitempty"`
    CallerId string `json:"CallerId,omitempty"`
    FallbackMethod string `json:"FallbackMethod,omitempty"`
    FallbackUrl string `json:"FallbackUrl,omitempty"`
    From string `json:"From,omitempty"`
    MachineDetection string `json:"MachineDetection,omitempty"`
    MachineDetectionSilenceTimeout int32 `json:"MachineDetectionSilenceTimeout,omitempty"`
    MachineDetectionSpeechEndThreshold int32 `json:"MachineDetectionSpeechEndThreshold,omitempty"`
    MachineDetectionSpeechThreshold int32 `json:"MachineDetectionSpeechThreshold,omitempty"`
    MachineDetectionTimeout int32 `json:"MachineDetectionTimeout,omitempty"`
    Method string `json:"Method,omitempty"`
    Record bool `json:"Record,omitempty"`
    RecordingChannels string `json:"RecordingChannels,omitempty"`
    RecordingStatusCallback string `json:"RecordingStatusCallback,omitempty"`
    RecordingStatusCallbackEvent []string `json:"RecordingStatusCallbackEvent,omitempty"`
    RecordingStatusCallbackMethod string `json:"RecordingStatusCallbackMethod,omitempty"`
    SendDigits string `json:"SendDigits,omitempty"`
    SipAuthPassword string `json:"SipAuthPassword,omitempty"`
    SipAuthUsername string `json:"SipAuthUsername,omitempty"`
    StatusCallback string `json:"StatusCallback,omitempty"`
    StatusCallbackEvent []string `json:"StatusCallbackEvent,omitempty"`
    StatusCallbackMethod string `json:"StatusCallbackMethod,omitempty"`
    Timeout int32 `json:"Timeout,omitempty"`
    To string `json:"To,omitempty"`
    Trim string `json:"Trim,omitempty"`
    Twiml string `json:"Twiml,omitempty"`
    Url string `json:"Url,omitempty"`
}

/*
Call20100401AccountsAccountSidCallsJsonPost Method for Call20100401AccountsAccountSidCallsJsonPost
Create a new outgoing call to phones, SIP-enabled endpoints or Twilio Client connections
 * @param accountSid The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.
 * @param optional nil or *Call20100401AccountsAccountSidCallsJsonPostOpts - Optional Parameters:
 * @param "ApplicationSid" (string) - The SID of the Application resource that will handle the call, if the call will be handled by an application.
 * @param "AsyncAmd" (string) - Select whether to perform answering machine detection in the background. Default, blocks the execution of the call until Answering Machine Detection is completed. Can be: `true` or `false`.
 * @param "AsyncAmdStatusCallback" (string) - The URL that we should call using the `async_amd_status_callback_method` to notify customer application whether the call was answered by human, machine or fax.
 * @param "AsyncAmdStatusCallbackMethod" (string) - The HTTP method we should use when calling the `async_amd_status_callback` URL. Can be: `GET` or `POST` and the default is `POST`.
 * @param "Byoc" (string) - The SID of a BYOC (Bring Your Own Carrier) trunk to route this call with. Note that `byoc` is only meaningful when `to` is a phone number; it will otherwise be ignored. (Beta)
 * @param "CallReason" (string) - The Reason for the outgoing call. Use it to specify the purpose of the call that is presented on the called party's phone. (Branded Calls Beta)
 * @param "CallerId" (string) - The phone number, SIP address, or Client identifier that made this call. Phone numbers are in [E.164 format](https://wwnw.twilio.com/docs/glossary/what-e164) (e.g., +16175551212). SIP addresses are formatted as `name@company.com`.
 * @param "FallbackMethod" (string) - The HTTP method that we should use to request the `fallback_url`. Can be: `GET` or `POST` and the default is `POST`. If an `application_sid` parameter is present, this parameter is ignored.
 * @param "FallbackUrl" (string) - The URL that we call using the `fallback_method` if an error occurs when requesting or executing the TwiML at `url`. If an `application_sid` parameter is present, this parameter is ignored.
 * @param "From" (string) - The phone number or client identifier to use as the caller id. If using a phone number, it must be a Twilio number or a Verified [outgoing caller id](https://www.twilio.com/docs/voice/api/outgoing-caller-ids) for your account. If the `to` parameter is a phone number, `From` must also be a phone number.
 * @param "MachineDetection" (string) - Whether to detect if a human, answering machine, or fax has picked up the call. Can be: `Enable` or `DetectMessageEnd`. Use `Enable` if you would like us to return `AnsweredBy` as soon as the called party is identified. Use `DetectMessageEnd`, if you would like to leave a message on an answering machine. If `send_digits` is provided, this parameter is ignored. For more information, see [Answering Machine Detection](https://www.twilio.com/docs/voice/answering-machine-detection).
 * @param "MachineDetectionSilenceTimeout" (int32) - The number of milliseconds of initial silence after which an `unknown` AnsweredBy result will be returned. Possible Values: 2000-10000. Default: 5000.
 * @param "MachineDetectionSpeechEndThreshold" (int32) - The number of milliseconds of silence after speech activity at which point the speech activity is considered complete. Possible Values: 500-5000. Default: 1200.
 * @param "MachineDetectionSpeechThreshold" (int32) - The number of milliseconds that is used as the measuring stick for the length of the speech activity, where durations lower than this value will be interpreted as a human and longer than this value as a machine. Possible Values: 1000-6000. Default: 2400.
 * @param "MachineDetectionTimeout" (int32) - The number of seconds that we should attempt to detect an answering machine before timing out and sending a voice request with `AnsweredBy` of `unknown`. The default timeout is 30 seconds.
 * @param "Method" (string) - The HTTP method we should use when calling the `url` parameter's value. Can be: `GET` or `POST` and the default is `POST`. If an `application_sid` parameter is present, this parameter is ignored.
 * @param "Record" (bool) - Whether to record the call. Can be `true` to record the phone call, or `false` to not. The default is `false`. The `recording_url` is sent to the `status_callback` URL.
 * @param "RecordingChannels" (string) - The number of channels in the final recording. Can be: `mono` or `dual`. The default is `mono`. `mono` records both legs of the call in a single channel of the recording file. `dual` records each leg to a separate channel of the recording file. The first channel of a dual-channel recording contains the parent call and the second channel contains the child call.
 * @param "RecordingStatusCallback" (string) - The URL that we call when the recording is available to be accessed.
 * @param "RecordingStatusCallbackEvent" ([]string) - The recording status events that will trigger calls to the URL specified in `recording_status_callback`. Can be: `in-progress`, `completed` and `absent`. Defaults to `completed`. Separate  multiple values with a space.
 * @param "RecordingStatusCallbackMethod" (string) - The HTTP method we should use when calling the `recording_status_callback` URL. Can be: `GET` or `POST` and the default is `POST`.
 * @param "SendDigits" (string) - A string of keys to dial after connecting to the number, maximum of 32 digits. Valid digits in the string include: any digit (`0`-`9`), '`#`', '`*`' and '`w`', to insert a half second pause. For example, if you connected to a company phone number and wanted to pause for one second, and then dial extension 1234 followed by the pound key, the value of this parameter would be `ww1234#`. Remember to URL-encode this string, since the '`#`' character has special meaning in a URL. If both `SendDigits` and `MachineDetection` parameters are provided, then `MachineDetection` will be ignored.
 * @param "SipAuthPassword" (string) - The password required to authenticate the user account specified in `sip_auth_username`.
 * @param "SipAuthUsername" (string) - The username used to authenticate the caller making a SIP call.
 * @param "StatusCallback" (string) - The URL we should call using the `status_callback_method` to send status information to your application. If no `status_callback_event` is specified, we will send the `completed` status. If an `application_sid` parameter is present, this parameter is ignored. URLs must contain a valid hostname (underscores are not permitted).
 * @param "StatusCallbackEvent" ([]string) - The call progress events that we will send to the `status_callback` URL. Can be: `initiated`, `ringing`, `answered`, and `completed`. If no event is specified, we send the `completed` status. If you want to receive multiple events, specify each one in a separate `status_callback_event` parameter. See the code sample for [monitoring call progress](https://www.twilio.com/docs/voice/api/call-resource?code-sample=code-create-a-call-resource-and-specify-a-statuscallbackevent&code-sdk-version=json). If an `application_sid` is present, this parameter is ignored.
 * @param "StatusCallbackMethod" (string) - The HTTP method we should use when calling the `status_callback` URL. Can be: `GET` or `POST` and the default is `POST`. If an `application_sid` parameter is present, this parameter is ignored.
 * @param "Timeout" (int32) - The integer number of seconds that we should allow the phone to ring before assuming there is no answer. The default is `60` seconds and the maximum is `600` seconds. For some call flows, we will add a 5-second buffer to the timeout value you provide. For this reason, a timeout value of 10 seconds could result in an actual timeout closer to 15 seconds. You can set this to a short time, such as `15` seconds, to hang up before reaching an answering machine or voicemail.
 * @param "To" (string) - The phone number, SIP address, or client identifier to call.
 * @param "Trim" (string) - Whether to trim any leading and trailing silence from the recording. Can be: `trim-silence` or `do-not-trim` and the default is `trim-silence`.
 * @param "Twiml" (string) - TwiML instructions for the call Twilio will use without fetching Twiml from url parameter. If both `twiml` and `url` are provided then `twiml` parameter will be ignored.
 * @param "Url" (string) - The absolute URL that returns the TwiML instructions for the call. We will call this URL using the `method` when the call connects. For more information, see the [Url Parameter](https://www.twilio.com/docs/voice/make-calls#specify-a-url-parameter) section in [Making Calls](https://www.twilio.com/docs/voice/make-calls).
@return ApiV2010AccountCall
*/
func (c *GAApiService) Call20100401AccountsAccountSidCallsJsonPost(accountSid string, params *Call20100401AccountsAccountSidCallsJsonPostParams) (*ApiV2010AccountCall, error) {
    path := "/2010-04-01/Accounts/{AccountSid}/Calls.json"
    path = strings.Replace(path, "{"+"AccountSid"+"}", accountSid, -1)

    resp, err := c.client.Post(c.baseURL+path, params)
    if err != nil {
        return nil, err
    }

    defer resp.Body.Close()

    ps := &ApiV2010AccountCall{}
    if err := json.NewDecoder(resp.Body).Decode(ps); err != nil {
        return nil, err
    }

    return ps, err
}
